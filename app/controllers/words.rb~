require 'rbconfig'
require 'mechanize'

#! /usr/bin/env ruby
require 'net/https'
require 'uri'
def test(url)
	start = Time.now
	node = url_validate(url)
	puts (Time.now - start)	
	text = ""
	getText(node, text)
	words = text.scan(/(\$?\w+([\.@-]\w+)*)/)


	injdict = words.inject(Hash.new(0)) {|dict, match| dict[match.first.upcase] += 1; dict}


end


def url_validate(url)

	begin
		uri = URI.parse(url)
		unless uri.scheme 	
			url = "http://" + url 
			uri = URI.parse(url) 
		end	
		if uri.path == ""
			url = url + "/"
			uri = URI.parse(url) 
		end

		http = Net::HTTP.new(uri.host, uri.port)
		if uri.scheme == "https"
			http.use_ssl = true
			http.verify_mode = OpenSSL::SSL::VERIFY_PEER
			http.ca_file = File.join(File.dirname(__FILE__), "cacert.pem")
		end


		http.start do
			http.request_get(uri.path) do |res|
				case res
				when Net::HTTPSuccess then
					return Nokogiri.parse(res.body)
				when Net::HTTPRedirection then
					return url_validate(res['location'])
				else
					return "NOPE"		
				end


			end
		end
	rescue Errno::ECONNREFUSED => e
		return "Couldn't access that URL: " + e 	
	rescue URI::InvalidURIError => e
		return "Couldn't access that URL: " + e 	
	end
end




def getText(node, text)
	text << " " + node.text if node.text? 
	node.children.each {|child| getText(child, text)}
	text
end


def mech
	agent = Mechanize.new
	agent.follow_meta_refresh = true

	if RbConfig::CONFIG["host_os"] =~ /mingw|mswin/
		# http://curl.haxx.se/ca
		cert_store = OpenSSL::X509::Store.new
		cert_store.add_file 'cacert.pem'
		p agent.cert_store
		agent.cert_store = cert_store  
		p agent.cert_store
	end

	page = agent.get "https://www.alice.com/press"

	page.content # Get the resulting page as a string
end
def regexWord
	/\w+/
end

def testString
	"<p> This is a simple <b>example</b> of HTML.</p>"
end

def match
	testString.scan(regexWord)
end
